
용량이 큰 파일을 읽거나 네트워크 등을 통해 데이터를 가져오거나할때 
동시처리와 같은 효과를 가져오도록 일을 해야 한다. 기본적으로 컴퓨터는 한번에 하나만 처리한다 

1. 멀티프로세싱 : 프로세스 여러개를 만들어 여러개의 프로세스가 하나의 목적을 위해 
                 움직인다. 초창기에 많이 사용함 
                문제점 : 프로세스는 서로 완전 독립이라 데이터 공유를 할 수 없다. 
                그래서 os를 통해 데이터를 주고받아야 하는데 이걸 IPC(Inter Process 
                Communication 이라고 한다)- 필터, 파이프, 메일슬롯등을 사용한다 
                리눅스 os 에서 좀비프로세스문제를 야기한다 
2. 멀티스레딩 : 하나의 프로세스를 여러개로 쪼개서 그 조각을 스레드라고 하고 
               여러개의 스레드가 시간을 쪼개서 cpu를 차지해서 마치 동시에 작업하는
               듯한 상황을 만든다. 
               동일 프로세스이기때문에 자료 교환은 쉬우나 일정 자원을 사용중에 
               쫒겨날 수 있어서 잘못된 결과가 나올 수 있다. 이를 동기화 문제라고 한다 

3. 비동기 방식 :  동기식 방법은 일을 순차적으로 진행한다. A,B,C 세개의 일을 동기식으로 
                처리하면  A시작 ->A종료  B시작 -> B종료 C시작->C종료 형태이다. 
                그러나 비동기는 A를 시작하고 바로 리턴, 백그라운드에서 A작업중 
                B를 시작하고 바로 리턴, 백그라운드에서 B작업중 
                C를 시작하고 바로 리턴, 백그라운드에서 C작업중 

                일이 종료하는 선후는 없다. 각각 일이 끝나고 나면 시스템이 콜백함수를 
                호출해서 일이 완료했음을 알려준다 
                보통 함수들이 매개변수로 콜백함수를 요청한다. 이 함수를 전달하면 
                실제 일이 모두 완료되었을때 이 콜백함수를 호출해준다.
                자바 7부터 비동기지원 
